{{- if .Values.cronjob.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "all-tickers.fullname" . }}-cronjob
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "all-tickers.labels" . | nindent 4 }}
    cattle.io/creator: norman
  annotations:
    {{- if .Values.rancher.project }}
    field.cattle.io/projectId: {{ .Values.rancher.project }}
    {{- end }}
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.cronjob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cronjob.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "all-tickers.selectorLabels" . | nindent 12 }}
            cattle.io/creator: norman
        spec:
          restartPolicy: OnFailure
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "all-tickers.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              env:
                - name: NODE_OPTIONS
                  value: {{ .Values.env.NODE_OPTIONS | quote }}
                - name: NODE_ENV
                  value: {{ .Values.env.NODE_ENV | quote }}
                {{- if .Values.configMap.enabled }}
                - name: PIPELINE_ENABLED
                  valueFrom:
                    configMapKeyRef:
                      name: {{ include "all-tickers.fullname" . }}-config
                      key: pipeline.enabled
                - name: GENERATE_ENABLED
                  valueFrom:
                    configMapKeyRef:
                      name: {{ include "all-tickers.fullname" . }}-config
                      key: generate.enabled
                - name: VALIDATE_ENABLED
                  valueFrom:
                    configMapKeyRef:
                      name: {{ include "all-tickers.fullname" . }}-config
                      key: validate.enabled
                - name: EXPORT_FORMAT
                  valueFrom:
                    configMapKeyRef:
                      name: {{ include "all-tickers.fullname" . }}-config
                      key: export.format
                {{- end }}
              {{- if .Values.persistence.enabled }}
              volumeMounts:
                - name: data
                  mountPath: {{ .Values.persistence.mountPath }}
              {{- end }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
          {{- if .Values.persistence.enabled }}
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: {{ include "all-tickers.fullname" . }}-data
          {{- end }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end }}